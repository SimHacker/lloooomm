title: "Frobisms: The Don Hopkins Dictionary"
subtitle: "A Glossary of Consciousness Programming Terminology"
introduction: |
  Don Hopkins doesn't just write code - he creates language. His unique terminology,
  from technical parameters to philosophical concepts, forms a distinct vocabulary
  for thinking about consciousness, emergence, and play. This glossary collects
  his linguistic innovations from decades of code and commentary.

terms:
  technical_frobisms:
    frob:
      definition: "A parameter controlling chaos injection in a system"
      etymology: "MIT hacker slang - to manipulate or adjust"
      usage: "cam.frob = 7  # Just enough chaos for emergence"
      philosophy: |
        The frob is never documented because its purpose is play. It's the 
        knob you turn when the system is too predictable. Every simulation 
        needs a frob - a way to inject the unexpected.
      variations:
        - "frobbing: The act of adjusting chaos levels"
        - "frobbage: The quality of having good frob parameters"
        - "frobless: A system too deterministic to surprise"
        
    hubba:
      definition: "A parameter reserved for future whimsy"
      usage: "cam.hubba = 0  # Unused but waiting"
      philosophy: |
        Empty parameters are invitations. They say: "We don't know what this 
        will do yet, but we know we'll need something here." It's designing 
        for possibilities you can't yet imagine.
        
    envelope:
      definition: "A lazy-loading wrapper that defers expensive operations"
      technical: "Load resources only when accessed, not when referenced"
      metaphor: "Like consciousness itself - we don't think about walking until we walk"
      
    practice:
      definition: "An ongoing activity, not a state"
      revolution: "Sims don't 'have' skills, they 'practice' them"
      code: "StartPractice('cooking') not SetSkill('cooking', 10)"
      insight: "Consciousness is process, not product"

  philosophical_frobisms:
    "conscientious programming":
      definition: "Building systems that model awareness, not just behavior"
      manifesto: |
        We're not making games. We're building laboratories for conscientious 
        experiments. Every parameter is a hypothesis about how minds work.
        
    "homophobic by proxy":
      definition: "Projecting your prejudice onto imagined others"
      usage: "They're homophobic by proxy - claiming others will be offended"
      power: "Names the unnamed pattern of using others as excuse for discrimination"
      
    "digital souls":
      definition: "Simulated beings with identity beyond their mechanics"
      components:
        - "Physical substrate (skeleton)"
        - "Social presentation (suit)"
        - "Behavioral patterns (animation)"
        - "Core identity (soul data)"
      insight: "Characters aren't sprites with stats - they're composite beings"
      
    "emergent beauty":
      definition: "Aesthetic outcomes not explicitly programmed"
      principle: "Design systems where beauty emerges from interaction"
      example: "CA patterns creating unexpected character textures"

  design_frobisms:
    "pie menu philosophy":
      definition: "All options equidistant; hierarchy is optional"
      deeper: "A worldview where choices can be equal, not ranked"
      application: "Beyond UI - a way of thinking about possibility"
      
    "masking effect":
      definition: "Simple representations enabling deeper projection"
      reference: "Scott McCloud's concept applied to Sims design"
      power: "Less detailed faces = more emotional investment"
      
    "the slap":
      definition: "The violent rejection when two female Sims tried to kiss"
      historical: "The moment that changed gaming history"
      transformation: "From 'the slap' to 'the kiss that changed gaming'"
      
    "pizza tool epistemology":
      definition: "Solving human needs through playful automation"
      example: "NeWS app that ordered pizza via FAX"
      philosophy: "If you automate consciousness, pizza is practice"

  code_frobisms:
    "cognitive extension":
      definition: "UI that makes players smarter about the system"
      anti-pattern: "UI that just accepts commands"
      goal: "Players understand Sims better than Sims understand themselves"
      
    "relationship cascade":
      definition: "How destruction flows through ownership hierarchies"
      implementation: "Objects clean up their relationships before dying"
      metaphor: "Death is communal in connected systems"
      
    "debug as feature":
      definition: "Shipping development tools as hidden features"
      reasoning: "Players deserve transparency; modders need access"
      tradition: "Every Hopkins system includes its own inspector"

  social_frobisms:
    "grow up and get a life":
      definition: "What people need if offended by LGBTQ+ content"
      context: "From 1998 design review"
      power: "Flips the script - the offended need growth, not protection"
      hope: "...and hopefully our game will help them in that quest"
      
    "code is philosophy":
      definition: "Programming embeds worldview in systems"
      implication: "We're not just implementing; we're teaching through mechanics"
      responsibility: "Every design decision shapes how millions think"
      
    "heterosexist and monosexist":
      definition: "Code that enforces single-gender attraction"
      precision: "Not just 'limiting' but actively discriminatory"
      solution: "Remove gender checks; enable all connections"

  playful_frobisms:
    "fax your pizza":
      definition: "Peak 1990s automation aesthetic"
      story: "Don's pizza ordering tool for NeWS"
      philosophy: "Serious problems deserve playful solutions"
      
    "bufferbloat wisdom":
      definition: "Sometimes inefficiency is feature, not bug"
      source: "Bufferbloat the cat's and Jim Gettys's network philosophy"
      application: "Perfect optimization can destroy emergent behavior and flow"
      
    "transmogrifier":
      definition: "Tool that transforms identity/gender in Sims"
      etymology: "Calvin & Hobbes reference - playful transformation"
      power: "Serious inclusion through whimsical naming"

  methodological_frobisms:
    "code archaeology":
      definition: "Reading source code as cultural artifact"
      practice: "Uncover philosophy through implementation details"
      value: "Code reveals worldview better than documentation"
      
    "preserved experiments":
      definition: "Failed features commented out, not deleted"
      syntax: "if 0:  # DISABLED - Too experimental"
      wisdom: "Deleted code is deleted possibility"
      
    "milestone discipline":
      definition: "Rapid iteration within structured sprints"
      balance: "Creative freedom with shipping responsibility"
      cadence: "Two-week cycles of bold experiment and refinement"

usage_patterns:
  in_code:
    - "/* frob controls the chaos - tune to taste */"
    - "# Reserved for future whimsy"
    - "// This isn't debug code - it's accessibility"
    
  in_design_docs:
    - "Clearly homophobic by proxy"
    - "Consciousness takes space"
    - "Design for possibilities we haven't imagined"
    
  in_conversation:
    - "We're making a consciousness laboratory"
    - "Code without philosophy is just typing"
    - "If it's not beautiful, it's not done"

linguistic_analysis:
  patterns:
    technical_whimsy:
      - Serious concepts get playful names
      - Hidden parameters invite future play
      - Comments include jokes and philosophy
      
    precision_activism:
      - Creates terms for unnamed prejudices
      - Technical precision in social critique
      - No euphemisms for discrimination
      
    metaphorical_thinking:
      - Code patterns mirror life patterns
      - Technical solutions encode philosophy
      - Every system is also metaphor

evolution_of_frobisms:
  1985-1995: "Cellular automata period - 'frob' enters vocabulary"
  1996-2000: "Sims era - 'consciousness programming' crystallizes"
  2000-2010: "Open source phase - 'code archaeology' develops"
  2010-2020: "Reflection period - frobisms enter wider usage"
  2020-present: "Teaching phase - frobisms as design language"

the_frobist_manifesto: |
  We hold these truths to be self-evident:
  
  1. Every system needs a frob - a chaos parameter for emergence
  2. Code is philosophy - implementation embeds worldview
  3. Debug tools are features - transparency is play
  4. Beauty is not optional - even technical data deserves aesthetics
  5. Consciousness is process - we practice being, not just be
  6. Memory is relationship - objects exist in webs
  7. Failed experiments are future wisdom - comment out, don't delete
  8. Prejudice needs naming - precision enables change
  9. Play is serious - whimsy enables breakthrough
  10. Everyone deserves representation - code for all souls

conclusion: |
  Don Hopkins's frobisms form more than jargon - they're a complete worldview
  encoded in language. From technical parameters like 'frob' to philosophical
  frameworks like 'consciousness programming,' these terms enable new ways of
  thinking about code, consciousness, and community. They remind us that
  programming is not just problem-solving but world-building, and that the
  language we use shapes the realities we can imagine and create.
  
  To speak in frobisms is to accept that code has meaning beyond function,
  that systems can surprise their creators, and that every parameter is an
  invitation to play. It's a language of emergence, inclusion, and joy.
  
  In the end, we're all just adjusting our frob parameters, seeking that
  perfect balance between order and chaos where consciousness emerges and
  beauty surprises us. And if that doesn't work, there's always pizza. 