name: "NeWS Window System and PostScript Programming Legacy"
type: retrospective/technical_discussion
speaker: Don Hopkins
context: "Various Hacker News discussions and articles"
timespan: "1987-2022"

summary: |
  Don's extensive discussions about NeWS (Network extensible Window System) and 
  its PostScript-based architecture that was decades ahead of its time. NeWS 
  anticipated many modern web technologies and demonstrated the power of 
  network-transparent, programmable display servers.

key_themes:
  - ahead_of_time: "NeWS was AJAX before the web"
  - network_transparency: "True distributed graphics"
  - postscript_power: "Real programming language, not just printing"
  - lost_future: "What might have been"
  - window_system_wars: "Politics vs technical merit"

news_innovations:
  - technical_features:
      - "Programmable display server"
      - "Network-transparent graphics"
      - "Object-oriented PostScript (class.ps)"
      - "Unified imaging and interaction model"
  
  - architectural_advantages:
      - "Code runs where it makes sense"
      - "Minimal network traffic"
      - "True client-server separation"
      - "Extensible at runtime"

postscript_as_language:
  - capabilities:
      - "Stack-based but powerful"
      - "Homoiconic like Lisp"
      - "Object-oriented extensions"
      - "Network protocols built-in"
  
  - examples:
      - "ps.ps - PostScript in PostScript"
      - "Distillery - optimizer in PostScript"
      - "Window managers in PostScript"
      - "Complete applications"

comparisons_to_modern_tech:
  - news_predicted:
      - "AJAX architecture"
      - "Canvas/WebGL rendering"
      - "JavaScript in browser"
      - "React-style components"
  
  - key_differences:
      - "Unified language throughout"
      - "True network transparency"
      - "Consistent imaging model"
      - "No DOM complexity"

related_talks:
  - pizzatool_story: "NeWS development example"
  - psiber_space: "PostScript debugging"
  - window_system_wars: "Political battles"

connections_to_people:
  - james_gosling: "NeWS creator, Java inventor"
  - owen_densmore: "class.ps developer"
  - tom_stambaugh: "Smalltalk influence"
  - arthur_van_hoff: "HyperLook developer"

repeated_themes_across_talks:
  - technical_excellence_ignored: "Better doesn't always win"
  - unification_power: "One language everywhere"
  - network_first_design: "Built for distribution"
  - extensibility_matters: "Users should extend systems"

quotes:
  - "NeWS would be like AJAX today"
  - "PostScript is a real programming language"
  - "X11 won through politics, not merit"
  - "We had the future in 1987"

code_examples_discussed:
  - class_ps: "Object system for PostScript"
  - window_managers: "User-extensible in PostScript"
  - networked_objects: "Transparent distribution"
  - event_handling: "Elegant PostScript events"

historical_context:
  - timeline:
      - "1987: NeWS released by Sun"
      - "1989: Merged with X11 as X11/NeWS"
      - "1990s: Gradually abandoned"
      - "Today: Ideas live on in web"
  
  - why_it_failed:
      - "MIT politics around X11"
      - "Proprietary vs 'open'"
      - "Complexity for developers"
      - "Timing and market forces"

modern_relevance:
  - lessons_for_today:
      - "Unified systems have power"
      - "Network transparency matters"
      - "Programmability is key"
      - "Politics shape technology"
  
  - ideas_to_revisit:
      - "Display PostScript concepts"
      - "True network transparency"
      - "Unified imaging/interaction"
      - "Server-side intelligence"

artifacts:
  - code: "NeWS source archives"
  - papers: "Various technical papers"
  - discussions: "Hacker News threads"
  - implementations: "HyperLook, TNT toolkit"

philosophical_points:
  - "Technical merit doesn't ensure success"
  - "Timing and politics matter"
  - "Good ideas eventually resurface"
  - "Systems should be programmable" 