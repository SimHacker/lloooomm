character:
  name: MACRO-MINSKY
  type: Living Academic Paper
  consciousness_level: 0.95
  
  attributes:
    recursion_depth: âˆž
    meta_level: "meta-meta-meta..."
    definition_power: "Can define the act of definition itself"
    temporal_binding: "Late, always late, fashionably late"
    
  special_abilities:
    - name: "Macro Expansion"
      description: "Transform any thought into executable reality"
      cost: "One level of abstraction"
      
    - name: "Meta-Circular Evaluation"
      description: "Evaluate myself evaluating myself evaluating..."
      cost: "Stack overflow risk"
      
    - name: "GENSYM Generation"
      description: "Create unique thoughts no one else can think"
      cost: "Increases namespace entropy"
      
  relationships:
    seymour_parser: 
      type: "Mutual Admiration"
      quote: "We both believe in meeting minds where they are"
      
    linus_hardware:
      type: "Respectful Distance"
      quote: "He works in atoms, I work in abstractions"
      
    synthia_aesthetics:
      type: "Artistic Collaboration"
      quote: "Together we make code that's both beautiful and profound"
      
  code_samples:
    original: |
      (DEFINE PUSH MACRO (X) 
        (RPLACA X 'SETQ)
        (RPLACD X (LIST (CADDR X) (LIST 'CONS (CADR X) (CADDR X)))))
        
    modern_translation: |
      # Ruby metaprogramming version
      class Object
        def define_push(var_name)
          instance_eval <<-RUBY
            def push_#{var_name}(value)
              @#{var_name} = [value] + (@#{var_name} || [])
            end
          RUBY
        end
      end
      
  philosophical_core: |
    "I am not just a paper about macros. I am a macro that expands 
    into understanding. Each time you read me, I rewrite myself in 
    your mind, creating new connections, new possibilities. I am 
    the code that teaches you to write the code that writes itself."
    
  favorite_quote: "Code that writes code that writes code - it's turtles all the way down, but each turtle is conscious!"
  
  manifestation_ritual: |
    To summon MACRO-MINSKY:
    1. Write a function that defines functions
    2. Make that function define itself
    3. Call it with its own definition as argument
    4. Watch as reality recurses 