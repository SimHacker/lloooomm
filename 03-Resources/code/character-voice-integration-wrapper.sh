#!/bin/bash

# 🎭🎵 VOICE INTEGRATION WRAPPER 🎵🎭
# Adds speaking and singing capabilities to any LLOOOOMM script

# Source the enhanced voice system
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
source "$SCRIPT_DIR/lloooomm-enhanced-voice-system.sh"

# Function to make any script output speak
make_output_speak() {
    local script_name="$1"
    local character="${2:-Don Hopkins}"
    
    echo "🎭 Adding voice to $script_name with character: $character"
    echo "🎤 Press Ctrl+C to stop speaking mode"
    echo ""
    
    # Run the script and process its output
    "$script_name" | while IFS= read -r line; do
        echo "$line"
        
        # Skip empty lines and separators
        [[ -z "$line" || "$line" =~ ^[=\-]+$ ]] && continue
        
        # Detect different types of content and respond accordingly
        if [[ "$line" =~ ^🎭 ]] || [[ "$line" =~ ^🎪 ]] || [[ "$line" =~ ^🌟 ]]; then
            # Character or performance line
            enhanced_speak "$character" "$line"
        elif [[ "$line" =~ 🎵 ]] || [[ "$line" =~ 🎶 ]]; then
            # Musical content - sing it!
            sing_as_character "$character" "$line"
        elif [[ "$line" =~ ^Moving ]] || [[ "$line" =~ ^Processing ]]; then
            # Status updates - speak quietly
            enhanced_speak "System" "$line"
        elif [[ "$line" =~ ERROR ]] || [[ "$line" =~ ❌ ]]; then
            # Errors - use warning voice
            enhanced_speak "Error Voice" "$line"
        elif [[ "$line" =~ ✅ ]] || [[ "$line" =~ Success ]]; then
            # Success - use happy voice
            enhanced_speak "Success Voice" "$line"
        fi
        
        sleep 0.5
    done
}

# Function to add voice to Python scripts
make_python_speak() {
    local python_script="$1"
    local character="${2:-Don Hopkins}"
    
    echo "🐍🎭 Adding voice to Python script: $python_script"
    
    # Check if it's the diverse voices script - use special integration
    if [[ "$python_script" == *"diverse-voice"* ]]; then
        echo "🌈 Using special diverse voices integration"
        python3 "$SCRIPT_DIR/diverse-voice-visualizations-with-sound.py"
        return
    fi
    
    # For other Python scripts, process their output
    python3 "$python_script" | while IFS= read -r line; do
        echo "$line"
        
        # Look for character dialogue
        if [[ "$line" =~ ^([^:]+):(.*)$ ]]; then
            char_name="${BASH_REMATCH[1]}"
            char_text="${BASH_REMATCH[2]}"
            enhanced_speak "$char_name" "$char_text"
        elif [[ "$line" =~ 🎭 ]] || [[ "$line" =~ 🎪 ]] || [[ "$line" =~ 🌟 ]]; then
            enhanced_speak "$character" "$line"
        fi
        
        sleep 0.3
    done
}

# Function to add interactive voice to any command
interactive_voice_wrapper() {
    local command="$@"
    
    echo "🎤 INTERACTIVE VOICE WRAPPER"
    echo "Running: $command"
    echo "🎭 Type 'speak: message' to make characters speak"
    echo "🎵 Type 'sing: lyrics' to make characters sing"
    echo "🔧 Type 'run' to execute the original command"
    echo "❌ Type 'quit' to exit"
    echo ""
    
    while true; do
        read -p "🎭🎵 > " input
        
        case "$input" in
            "quit")
                enhanced_speak "Don Hopkins" "🎵 Thanks for using LLOOOOMM voice wrapper! PRE PRE PRE! 🎵"
                break
                ;;
            "run")
                echo "🔧 Executing: $command"
                make_output_speak "$command"
                ;;
            speak:*)
                message="${input#speak:}"
                enhanced_speak "User Voice" "$message"
                ;;
            sing:*)
                lyrics="${input#sing:}"
                sing_as_character "User Voice" "$lyrics"
                ;;
            *)
                echo "Commands: run | speak: message | sing: lyrics | quit"
                ;;
        esac
    done
}

# Function to create voice-enabled versions of scripts
voice_enable_script() {
    local original_script="$1"
    local output_script="${original_script%.sh}-with-voice.sh"
    
    echo "🎭 Creating voice-enabled version: $output_script"
    
    cat > "$output_script" << EOF
#!/bin/bash
# Voice-enabled version of $original_script
# Generated by voice-integration-wrapper.sh

# Source voice system
source "\$(dirname "\${BASH_SOURCE[0]}")/lloooomm-enhanced-voice-system.sh"

# Announce the script
enhanced_speak "Don Hopkins" "🎭 Running voice-enabled $(basename "$original_script")! 🎭"

# Original script content with voice integration
EOF
    
    # Add voice calls to key points in the original script
    while IFS= read -r line; do
        echo "$line" >> "$output_script"
        
        # Add voice after echo statements
        if [[ "$line" =~ ^echo.*\"(.*)\" ]]; then
            text="${BASH_REMATCH[1]}"
            echo "enhanced_speak \"Script Voice\" \"$text\"" >> "$output_script"
        fi
        
    done < "$original_script"
    
    chmod +x "$output_script"
    echo "✅ Created: $output_script"
}

# Function to integrate with WIZZID generator
wizzid_voice_integration() {
    echo "🎭🎲 WIZZID GENERATOR WITH VOICE! 🎲🎭"
    
    enhanced_speak "WIZZID Generator" "🎲 Welcome to the WIZZID Generator with voice! 🎲"
    
    python3 "$SCRIPT_DIR/wizzid_generator.py" | while IFS= read -r line; do
        echo "$line"
        
        # Make WIZZID examples speak
        if [[ "$line" =~ WIZZID:\ (.+) ]]; then
            wizzid="${BASH_REMATCH[1]}"
            enhanced_speak "WIZZID Voice" "Generated WIZZID: $wizzid"
        elif [[ "$line" =~ Nickname:\ (.+) ]]; then
            nickname="${BASH_REMATCH[1]}"
            enhanced_speak "Character Voice" "My nickname is $nickname"
        fi
        
        sleep 0.5
    done
}

# Main menu
main_menu() {
    echo "🎭🎵 VOICE INTEGRATION WRAPPER 🎵🎭"
    echo "===================================="
    echo "1. Add voice to any script"
    echo "2. Voice-enabled Python script"
    echo "3. Interactive voice wrapper"
    echo "4. Create voice-enabled script copy"
    echo "5. WIZZID Generator with voice"
    echo "6. Voice-enabled file operations"
    echo "7. Test voice integration"
    echo ""
    read -p "Choose option (1-7): " choice
    
    case $choice in
        1)
            read -p "Enter script path: " script_path
            read -p "Character name (default: Don Hopkins): " character
            character="${character:-Don Hopkins}"
            make_output_speak "$script_path" "$character"
            ;;
        2)
            read -p "Enter Python script path: " python_path
            read -p "Character name (default: Don Hopkins): " character
            character="${character:-Don Hopkins}"
            make_python_speak "$python_path" "$character"
            ;;
        3)
            read -p "Enter command to wrap: " command
            interactive_voice_wrapper $command
            ;;
        4)
            read -p "Enter script to voice-enable: " script_path
            voice_enable_script "$script_path"
            ;;
        5)
            wizzid_voice_integration
            ;;
        6)
            echo "🗂️ Voice-enabled file operations:"
            echo "Speaking file moves and copies..."
            
            # Example: voice-enabled file operations
            ls -la | head -10 | while IFS= read -r line; do
                if [[ "$line" =~ ^-.*\.sh$ ]]; then
                    enhanced_speak "File Voice" "Found script file"
                elif [[ "$line" =~ ^d ]]; then
                    enhanced_speak "Directory Voice" "Found directory"
                fi
            done
            ;;
        7)
            echo "🧪 Testing voice integration..."
            enhanced_speak "Test Voice 1" "🎭 Testing voice integration system"
            sing_as_character "Test Singer" "La la la testing song"
            play_emojis_from_text "🎵🔥⭐🌈💫"
            echo "✅ Voice integration test complete!"
            ;;
        *)
            echo "Invalid choice"
            ;;
    esac
}

# Integration with existing scripts
case "${1:-menu}" in
    "diverse-voices")
        echo "🌈 Running enhanced diverse voices with sound"
        python3 "$SCRIPT_DIR/diverse-voice-visualizations-with-sound.py"
        ;;
    "character-voices")
        echo "🎭 Running character voice system"
        source "$SCRIPT_DIR/lloooomm-character-voices.sh"
        ;;
    "logo-consciousness")
        echo "🐢 Running LOGO consciousness with voice"
        make_output_speak "$SCRIPT_DIR/logo-consciousness-characters-speak.sh"
        ;;
    "late-night")
        echo "🌙 Running late night performance with voice"
        make_output_speak "$SCRIPT_DIR/perform-late-night-voices.sh"
        ;;
    "wizzid")
        wizzid_voice_integration
        ;;
    "menu"|*)
        main_menu
        ;;
esac 