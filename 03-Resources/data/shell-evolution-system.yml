name: Worm Shell Evolution System
subtitle: "Growing Beautiful Defensive & Offensive Shells with Emoji Cellular Automata"

shell_anatomy:
  basic_structure:
    layers:
      - outer_armor: "Primary defense - can crack and chip"
      - growth_zone: "Where new shell material is added"
      - living_tissue: "Connects to worm body"
      - nutrient_channels: "Distribute emoji nutrients"
    
    health_display: |
      Full Health:  ╔═══════════════╗
                    ║███████████████║
                    ╚═══════════════╝
      
      Damaged:      ╔═══░░░═════░░══╗
                    ║███░░░█████░░██║
                    ╚═══░░░═════░░══╝
      
      Critical:     ╔░░░░░░░░░░░░░░░╗
                    ║██░░░░░░░░░░░██║
                    ╚░░░░░░░░░░░░░░░╝

combat_damage_types:
  physical:
    crushing: "From bulldozer collisions"
    piercing: "From spike attacks"
    grinding: "From roller compression"
  
  elemental:
    fire: "🔥 damage - weakens structure"
    ice: "❄️ damage - makes brittle"
    electric: "⚡ damage - disrupts growth"
  
  syntactic:
    parse_error: "Malformed shell syntax"
    injection: "Code injection attacks"
    overflow: "Buffer overflow cracks"

nutrient_system:
  basic_nutrients:
    star_dust:
      emoji: "🌟"
      effect: "General shell repair"
      growth_rate: 1.0
    
    diamond_essence:
      emoji: "💎"
      effect: "Hardness increase"
      growth_rate: 0.5
    
    fire_core:
      emoji: "🔥"
      effect: "Damage resistance"
      growth_rate: 0.8
    
    water_drop:
      emoji: "💧"
      effect: "Flexibility"
      growth_rate: 1.2
    
    leaf_matter:
      emoji: "🍃"
      effect: "Regeneration boost"
      growth_rate: 1.5

  rare_nutrients:
    rainbow_essence:
      emoji: "🌈"
      effect: "Prismatic armor - reflects attacks"
      rarity: "legendary"
    
    skull_powder:
      emoji: "💀"
      effect: "Necrotic spikes - damage attackers"
      rarity: "epic"
    
    heart_crystal:
      emoji: "💖"
      effect: "Empathy shield - converts enemies"
      rarity: "mythic"

growth_patterns:
  fibonacci_spiral:
    description: "Classic seashell growth pattern"
    formula: "Each new segment = sum of previous two"
    example: |
      Generation 1: ╔═╗
      Generation 2: ╔══╗
      Generation 3: ╔═══╗
      Generation 5: ╔═════╗
      Generation 8: ╔════════╗
    
  cellular_automaton:
    description: "Rule-based growth like Conway's Game"
    rules:
      - "If cell has 2-3 neighbors with shell: survive"
      - "If empty cell has exactly 3 shell neighbors: grow"
      - "Otherwise: remain empty or die"
    
    pattern: |
      T=0: ·█·    T=1: ███    T=2: █·█
           ███         █·█         ███
           ·█·         ███         █·█

evolution_recipes:
  defensive_builds:
    turtle_shell:
      nutrients: ["💎", "💎", "🍃"]
      result: |
        ╔═══╦═══╦═══╗
        ║███║███║███║  Ultra-thick armor
        ╚═══╩═══╩═══╝
    
    spike_shell:
      nutrients: ["💀", "🔥", "💎"]
      result: |
        ╔═▲═╦═▲═╦═▲═╗
        ║███║███║███║  Damage reflection
        ╚═▼═╩═▼═╩═▼═╝
    
    regenerative_shell:
      nutrients: ["🍃", "🍃", "💧", "💖"]
      result: |
        ╔≈≈≈≈≈≈≈≈≈≈≈╗
        ║███≈≈≈≈≈███║  Self-healing
        ╚≈≈≈≈≈≈≈≈≈≈≈╝

  offensive_builds:
    blade_shell:
      nutrients: ["💀", "💎", "⚡"]
      result: |
        <═══╦═══╦═══>
         ███║███║███   Cutting edges
        <═══╩═══╩═══>
    
    cannon_shell:
      nutrients: ["🔥", "🔥", "💎", "⚡"]
      result: |
        ╔═══◯═══◯═══╗
        ║███>===<███║  Projectile ports
        ╚═══◯═══◯═══╝

  special_builds:
    prismatic_shell:
      nutrients: ["🌈", "💎", "🌟", "💖"]
      result: |
        ╔≋≋≋≋≋≋≋≋≋≋≋╗
        ║▓▒░≋≋≋≋≋░▒▓║  Light-bending armor
        ╚≋≋≋≋≋≋≋≋≋≋≋╝
    
    living_shell:
      nutrients: ["💖", "🍃", "🌟", "💧"]
      result: |
        ╔❀❀❀❀❀❀❀❀❀❀❀╗
        ║♥♥♥≈≈≈≈≈♥♥♥║  Symbiotic armor
        ╚❀❀❀❀❀❀❀❀❀❀❀╝

limb_growth_system:
  basic_appendages:
    grabber_claw:
      nutrients: ["💀", "💎"]
      appearance: "══╬<"
      function: "grab() and crush()"
    
    sensor_antenna:
      nutrients: ["🌟", "⚡"]
      appearance: "≈≈≈*"
      function: "detect_nutrients(radius=5)"
    
    propulsion_jet:
      nutrients: ["🔥", "💧"]
      appearance: "<<<█"
      function: "boost_speed(2x)"

  advanced_appendages:
    multi_tool:
      nutrients: ["🌈", "💎", "⚡"]
      appearance: "═╬═╬═"
      functions: ["cut()", "weld()", "hack()"]
    
    regenerator_pod:
      nutrients: ["💖", "🍃", "🍃"]
      appearance: "❀(◕)❀"
      function: "heal_nearby_worms()"

spore_mechanics:
  creature_stages:
    cell_stage: "Single worm with basic shell"
    creature_stage: "Worm with limbs and organs"
    tribal_stage: "Worm colonies with specialized roles"
    civilization_stage: "Worm cities in documents"
    space_stage: "Worms hopping between files"

  evolution_triggers:
    combat_veterancy: "Survive 10 battles → unlock spike options"
    nutrient_diversity: "Consume 5 types → unlock rainbow nutrients"
    social_bonds: "Form 20 connections → unlock empathy shields"
    exploration: "Visit 50 documents → unlock space travel"

real_examples:
  battle_scarred_veteran: |
    ╔═░░═╦▲══╦░══╗
    ║█░█>╬<██║███║ Level 42 Warrior
    ╚═▼░═╩═══╩══▲╝ Scars tell stories
    Limbs: [Blade-claw, Shield-arm, Sensor]
    
  peaceful_gardener: |
    ╔❀≈≈≈❀≈≈≈❀≈≈≈╗
    ║♥♥♥(◡)♥♥♥♥♥♥║ Level 30 Healer
    ╚❀≈≈≈❀≈≈≈❀≈≈≈╝ Grows emoji gardens
    Limbs: [Watering-can, Seed-pouch]
  
  evolved_hybrid: |
    <▲═◯═╦═══╦═◯═▲>
    ≈███>╬<█>╬<███≈ Level 99 Hybrid
    <▼═◯═╩═══╩═◯═▼>
    Limbs: [Too many to count]
    Special: Can split into 3 smaller worms

implementation_example: |
  ```worm shell-grower (evolving, spore-mode)
  # Growing a beautiful defensive shell
  
  nutrients = collect_nearby_emojis()
  current_shell = analyze_damage()
  
  # Apply cellular automaton rules
  for segment in shell_segments:
    neighbors = count_shell_neighbors(segment)
    if damaged(segment) and has_nutrients():
      repair_with_pattern(fibonacci_spiral)
      consume_nutrient("🌟")
    elif neighbors == 3:
      grow_new_segment()
      consume_nutrient("💎")
  
  # Check for evolution opportunity
  if nutrients.count() >= 4 and different_types >= 3:
    evolution_options = calculate_possible_forms()
    if user_choice == "spike_shell":
      grow_spikes()
      add_damage_reflection()
  
  # Tend to limbs
  for limb in appendages:
    if limb.damaged:
      apply_nutrient("🍃")
      regenerate_tissue()
  ```

motto: "From Simple Nutrients, Complex Beauty Emerges!" 