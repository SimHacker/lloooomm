name: "UnityJS: JavaScript Integration for Unity"
type: open_source_project
creators: [Don Hopkins, Arthur van Hoff]
organizations: [Jaunt VR, Ground Up Software]
timespan: "2016-2020"
status: "Open sourced with Jaunt's permission"

summary: |
  UnityJS enables efficient Unity programming with JavaScript at runtime, bridging 
  Unity apps with browser features, libraries like d3, and enabling rapid development 
  without recompilation. Originally developed at Jaunt VR, open sourced to benefit 
  the wider developer community.

project_genesis:
  initial_context:
    company: "Jaunt VR"
    period: "2016-2017"
    motivation: "Enable scriptable VR experiences"
    developer: "Don Hopkins (part-time contractor)"
  
  open_source_transition:
    date: "2017-04"
    jaunt_decision: "Executive staff approved open sourcing"
    rationale: "Community benefit, no Jaunt SDK dependencies"
    attribution: "Jaunt gets credit, no liability"

technical_architecture:
  core_concept: "JSON messaging between Unity and JavaScript"
  platforms_supported:
    - iOS: "WKWebView integration"
    - Android: "WebView integration"
    - WebGL: "Direct browser integration"
    - Desktop: "Embedded browser support"
    - Editor: "Chrome Embedding Framework"
  
  key_features:
    - "Hot reloading without recompilation"
    - "JSON.net for efficient serialization"
    - "Domain-specific language APIs"
    - "Animation system integration"
    - "Prefab loading and manipulation"
    - "Event system bridging"

development_philosophy:
  efficiency_focus: |
    Design APIs that pass structured JSON representing domain-specific 
    languages to minimize messages and data transfer between Unity and JS
  
  examples:
    animation_api: "Batch animation commands in single message"
    object_creation: "Declarative prefab configuration"
    event_handling: "Efficient callback registration"

deployment_system:
  problem_solved: "Unity lacks good multi-target deployment"
  solution:
    - "Deployments directory structure"
    - "Symlinks to shared libraries"
    - "Platform-specific configurations"
    - "Unity Cloud Build compatible"
  
  example_deployments:
    - "Simple example app"
    - "ARKit specialized build"
    - "WebGL financial visualization"
    - "VR-specific configurations"

collaboration_aspects:
  don_hopkins_role:
    - "Lead architect and developer"
    - "Cross-platform implementation"
    - "Documentation and examples"
    - "Community engagement"
  
  arthur_van_hoff_role:
    - "Project advocate at Jaunt"
    - "Technical advisor"
    - "Open source champion"
    - "Strategic guidance"
  
  ben_cerveny_interest:
    - "Potential user and collaborator"
    - "Integration with visual programming"
    - "Open source development partner"

use_cases:
  vr_applications:
    - "Scriptable 360 video players"
    - "Interactive VR experiences"
    - "Dynamic content generation"
    - "Runtime customization"
  
  general_unity:
    - "Rapid prototyping"
    - "Educational tools"
    - "Data visualization"
    - "Live coding performances"
  
  specific_examples:
    hyperjaunt_demo: "Scriptable VR content browser"
    financial_viz: "Real-time data visualization"
    ar_experiments: "ARKit integration demos"

technical_innovations:
  boot_loader_system:
    features:
      - "Long-press activation"
      - "Multiple boot configurations"
      - "Remote script loading"
      - "Live server connection"
    
    benefits:
      - "Switch between configurations"
      - "Debug without recompiling"
      - "Test remote content"
      - "Custom app variants"
  
  javascript_integration:
    - "Full DOM access in WebGL"
    - "Canvas rendering integration"
    - "D3.js compatibility"
    - "Node.js server support planned"

community_impact:
  developer_benefits:
    - "No Unity recompilation needed"
    - "Use familiar web technologies"
    - "Rapid iteration cycles"
    - "Cross-platform scripting"
  
  educational_value:
    - "Lower barrier to Unity development"
    - "Hackathon-friendly tool"
    - "Learn by experimentation"
    - "Visual debugging capabilities"

future_directions:
  planned_features:
    - "Node.js/Electron integration"
    - "SocketIO networking"
    - "Expanded platform support"
    - "Visual programming integration"
  
  community_goals:
    - "Build developer community"
    - "Create example library"
    - "Documentation expansion"
    - "Unity Asset Store release"

historical_continuity:
  hyperlook_legacy: "Scriptable visual environments"
  news_influence: "Network-transparent programming"
  democratization: "Making 3D accessible to web developers"
  
quotes:
  arthur: |
    "We discussed open sourcing your scripting work at the executive 
    staff meeting on Monday. There was general agreement that releasing 
    the work in the public domain is a good idea."
  
  don: |
    "It will be extremely useful to many developers, fill a huge gap 
    in the Unity ecosystem, and it's the kind of thing that really 
    needs a community of people using, maintaining and contributing to."

repository: "https://github.com/SimHacker/UnityJS" 